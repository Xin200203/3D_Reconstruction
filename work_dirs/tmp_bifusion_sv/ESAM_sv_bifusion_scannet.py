backend_args = None
class_names = [
    'wall',
    'floor',
    'cabinet',
    'bed',
    'chair',
    'sofa',
    'table',
    'door',
    'window',
    'bookshelf',
    'picture',
    'counter',
    'desk',
    'curtain',
    'refrigerator',
    'showercurtrain',
    'toilet',
    'sink',
    'bathtub',
    'otherfurniture',
]
color_mean = (
    121.87247106275309,
    109.73306679373762,
    95.614771986258,
)
color_std = (
    72.27912483750035,
    70.2937017925937,
    68.89837699573124,
)
custom_hooks = [
    dict(
        pretrained='work_dirs/tmp/mask3d_scannet200.pth',
        submodule='backbone.backbone3d',
        type='PartialLoadHook'),
]
custom_imports = dict(imports=[
    'oneformer3d',
    'oneformer3d.partial_load_hook',
])
data_prefix = dict(
    pts='points',
    pts_instance_mask='instance_mask',
    pts_semantic_mask='semantic_mask',
    sp_pts_mask='super_points')
data_root = 'data/scannet-sv/'
dataset_type = 'ScanNetSegDataset_'
default_hooks = dict(
    checkpoint=dict(
        _scope_='mmdet3d',
        interval=1,
        max_keep_ckpts=1,
        rule='greater',
        save_best=[
            'all_ap_50%',
        ],
        type='CheckpointHook'),
    logger=dict(_scope_='mmdet3d', interval=50, type='LoggerHook'),
    param_scheduler=dict(_scope_='mmdet3d', type='ParamSchedulerHook'),
    sampler_seed=dict(_scope_='mmdet3d', type='DistSamplerSeedHook'),
    timer=dict(_scope_='mmdet3d', type='IterTimerHook'),
    visualization=dict(_scope_='mmdet3d', type='Det3DVisualizationHook'))
default_scope = 'mmdet3d'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
eval_pipeline = [
    dict(
        _scope_='mmdet3d',
        backend_args=None,
        coord_type='DEPTH',
        load_dim=6,
        shift_height=False,
        type='LoadPointsFromFile',
        use_color=True,
        use_dim=[
            0,
            1,
            2,
            3,
            4,
            5,
        ]),
    dict(_scope_='mmdet3d', color_mean=None, type='NormalizePointsColor'),
    dict(_scope_='mmdet3d', keys=[
        'points',
    ], type='Pack3DDetInputs'),
]
input_modality = dict(use_camera=False, use_lidar=True)
inst_mapping = [
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    14,
    16,
    24,
    28,
    33,
    34,
    36,
    39,
]
label2cat = dict({
    0: 'wall',
    1: 'floor',
    10: 'picture',
    11: 'counter',
    12: 'desk',
    13: 'curtain',
    14: 'refrigerator',
    15: 'showercurtrain',
    16: 'toilet',
    17: 'sink',
    18: 'bathtub',
    19: 'otherfurniture',
    2: 'cabinet',
    20: 'unlabeled',
    3: 'bed',
    4: 'chair',
    5: 'sofa',
    6: 'table',
    7: 'door',
    8: 'window',
    9: 'bookshelf'
})
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    _scope_='mmdet3d', by_epoch=True, type='LogProcessor', window_size=50)
metainfo = dict(
    classes=(
        'wall',
        'floor',
        'cabinet',
        'bed',
        'chair',
        'sofa',
        'table',
        'door',
        'window',
        'bookshelf',
        'picture',
        'counter',
        'desk',
        'curtain',
        'refrigerator',
        'showercurtrain',
        'toilet',
        'sink',
        'bathtub',
        'otherfurniture',
    ))
metric_meta = dict(
    classes=[
        'wall',
        'floor',
        'cabinet',
        'bed',
        'chair',
        'sofa',
        'table',
        'door',
        'window',
        'bookshelf',
        'picture',
        'counter',
        'desk',
        'curtain',
        'refrigerator',
        'showercurtrain',
        'toilet',
        'sink',
        'bathtub',
        'otherfurniture',
        'unlabeled',
    ],
    ignore_index=[
        20,
    ],
    label2cat=dict({
        0: 'wall',
        1: 'floor',
        10: 'picture',
        11: 'counter',
        12: 'desk',
        13: 'curtain',
        14: 'refrigerator',
        15: 'showercurtrain',
        16: 'toilet',
        17: 'sink',
        18: 'bathtub',
        19: 'otherfurniture',
        2: 'cabinet',
        20: 'unlabeled',
        3: 'bed',
        4: 'chair',
        5: 'sofa',
        6: 'table',
        7: 'door',
        8: 'window',
        9: 'bookshelf'
    }))
model = dict(
    backbone=dict(
        clip_pretrained='',
        freeze_blocks=0,
        type='BiFusionEncoder',
        use_tiny_sa_2d=False,
        voxel_size=0.02),
    criterion=dict(
        inst_criterion=dict(
            bbox_loss=dict(),
            fix_dice_loss_weight=True,
            fix_mean_loss=True,
            iter_matcher=True,
            loss_weight=[
                0.5,
                1.0,
                1.0,
                0.5,
            ],
            matcher=dict(
                costs=[
                    dict(type='QueryClassificationCost', weight=0.5),
                    dict(type='MaskBCECost', weight=1.0),
                    dict(type='MaskDiceCost', weight=1.0),
                ],
                topk=1,
                type='SparseMatcher'),
            non_object_weight=0.1,
            num_classes=18,
            type='MixedInstanceCriterion'),
        num_semantic_classes=20,
        sem_criterion=dict(
            ignore_index=20, loss_weight=0.5, type='ScanNetSemanticCriterion'),
        type='ScanNetMixedCriterion'),
    data_preprocessor=dict(type='Det3DDataPreprocessor_'),
    decoder=dict(
        activation_fn='gelu',
        attn_mask=True,
        cross_attn_mode=[
            '',
            'SP',
            'SP',
            'SP',
        ],
        d_model=256,
        dropout=0.0,
        fix_attention=True,
        hidden_dim=1024,
        in_channels=96,
        iter_pred=True,
        mask_pred_mode=[
            'SP',
            'SP',
            'P',
            'P',
        ],
        num_heads=8,
        num_instance_classes=18,
        num_instance_queries=0,
        num_layers=3,
        num_semantic_classes=20,
        num_semantic_linears=1,
        num_semantic_queries=0,
        objectness_flag=False,
        share_attn_mlp=False,
        share_mask_mlp=False,
        type='ScanNetMixQueryDecoder'),
    num_classes=18,
    pool=dict(channel_proj=96, type='GeoAwarePooling'),
    query_thr=0.5,
    test_cfg=dict(
        inst_score_thr=0.0,
        matrix_nms_kernel='linear',
        nms=True,
        npoint_thr=100,
        obj_normalization=True,
        pan_score_thr=0.5,
        sp_score_thr=0.4,
        stuff_classes=[
            0,
            1,
        ],
        topk_insts=100),
    train_cfg=dict(),
    type='ScanNet200MixFormer3D',
    voxel_size=0.02)
num_instance_classes = 18
num_instance_classes_eval = 18
num_points = 8192
num_semantic_classes = 20
optim_wrapper = dict(
    clip_grad=dict(max_norm=10, norm_type=2),
    optimizer=dict(lr=0.0001, type='AdamW', weight_decay=0.05),
    type='AmpOptimWrapper')
param_scheduler = dict(begin=0, end=128, power=0.9, type='PolyLR')
resume = False
sem_mapping = [
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    14,
    16,
    24,
    28,
    33,
    34,
    36,
    39,
]
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet3d',
        ann_file='scannet200_sv_oneformer3d_infos_val.pkl',
        backend_args=None,
        data_prefix=dict(
            pts='points',
            pts_instance_mask='instance_mask',
            pts_semantic_mask='semantic_mask',
            sp_pts_mask='super_points'),
        data_root='/home/nebula/xxy/ESAM/data/scannet200-sv',
        ignore_index=20,
        metainfo=dict(classes=[
            'wall',
            'floor',
            'cabinet',
            'bed',
            'chair',
            'sofa',
            'table',
            'door',
            'window',
            'bookshelf',
            'picture',
            'counter',
            'desk',
            'curtain',
            'refrigerator',
            'showercurtrain',
            'toilet',
            'sink',
            'bathtub',
            'otherfurniture',
        ]),
        modality=dict(use_camera=False, use_lidar=True),
        pipeline=[
            dict(
                coord_type='DEPTH',
                load_dim=6,
                shift_height=False,
                type='LoadPointsFromFile',
                use_color=True,
                use_dim=[
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                ]),
            dict(
                type='LoadAnnotations3D_',
                with_bbox_3d=False,
                with_label_3d=False,
                with_mask_3d=True,
                with_seg_3d=True,
                with_sp_mask_3d=True),
            dict(type='PointSegClassMapping'),
            dict(
                flip=False,
                img_scale=(
                    1333,
                    800,
                ),
                pts_scale_ratio=1,
                transforms=[
                    dict(
                        color_mean=(
                            121.87247106275309,
                            109.73306679373762,
                            95.614771986258,
                        ),
                        color_std=(
                            72.27912483750035,
                            70.2937017925937,
                            68.89837699573124,
                        ),
                        type='NormalizePointsColor_'),
                    dict(
                        merge_non_stuff_cls=False,
                        num_classes=20,
                        stuff_classes=[
                            0,
                            1,
                        ],
                        type='AddSuperPointAnnotations'),
                ],
                type='MultiScaleFlipAug3D'),
            dict(keys=[
                'points',
                'sp_pts_mask',
            ], type='Pack3DDetInputs_'),
        ],
        test_mode=True,
        type='ScanNetSegDataset_'),
    drop_last=False,
    num_workers=1,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet3d', shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    _scope_='mmdet3d',
    id_offset=65536,
    inst_mapping=[
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        14,
        16,
        24,
        28,
        33,
        34,
        36,
        39,
    ],
    metric_meta=dict(
        classes=[
            'wall',
            'floor',
            'cabinet',
            'bed',
            'chair',
            'sofa',
            'table',
            'door',
            'window',
            'bookshelf',
            'picture',
            'counter',
            'desk',
            'curtain',
            'refrigerator',
            'showercurtrain',
            'toilet',
            'sink',
            'bathtub',
            'otherfurniture',
            'unlabeled',
        ],
        ignore_index=[
            20,
        ],
        label2cat=dict({
            0: 'wall',
            1: 'floor',
            10: 'picture',
            11: 'counter',
            12: 'desk',
            13: 'curtain',
            14: 'refrigerator',
            15: 'showercurtrain',
            16: 'toilet',
            17: 'sink',
            18: 'bathtub',
            19: 'otherfurniture',
            2: 'cabinet',
            20: 'unlabeled',
            3: 'bed',
            4: 'chair',
            5: 'sofa',
            6: 'table',
            7: 'door',
            8: 'window',
            9: 'bookshelf'
        })),
    min_num_points=1,
    sem_mapping=[
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        14,
        16,
        24,
        28,
        33,
        34,
        36,
        39,
    ],
    stuff_class_inds=[
        0,
        1,
    ],
    thing_class_inds=[
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
    ],
    type='UnifiedSegMetric')
test_pipeline = [
    dict(
        coord_type='DEPTH',
        load_dim=6,
        shift_height=False,
        type='LoadPointsFromFile',
        use_color=True,
        use_dim=[
            0,
            1,
            2,
            3,
            4,
            5,
        ]),
    dict(
        type='LoadAnnotations3D_',
        with_bbox_3d=False,
        with_label_3d=False,
        with_mask_3d=True,
        with_seg_3d=True,
        with_sp_mask_3d=True),
    dict(type='PointSegClassMapping'),
    dict(
        flip=False,
        img_scale=(
            1333,
            800,
        ),
        pts_scale_ratio=1,
        transforms=[
            dict(
                color_mean=(
                    121.87247106275309,
                    109.73306679373762,
                    95.614771986258,
                ),
                color_std=(
                    72.27912483750035,
                    70.2937017925937,
                    68.89837699573124,
                ),
                type='NormalizePointsColor_'),
            dict(
                merge_non_stuff_cls=False,
                num_classes=20,
                stuff_classes=[
                    0,
                    1,
                ],
                type='AddSuperPointAnnotations'),
        ],
        type='MultiScaleFlipAug3D'),
    dict(keys=[
        'points',
        'sp_pts_mask',
    ], type='Pack3DDetInputs_'),
]
train_cfg = dict(max_epochs=128, type='EpochBasedTrainLoop', val_interval=128)
train_dataloader = dict(
    batch_size=16,
    dataset=dict(
        _scope_='mmdet3d',
        ann_file='scannet200_sv_oneformer3d_infos_train.pkl',
        backend_args=None,
        data_prefix=dict(
            pts='points',
            pts_instance_mask='instance_mask',
            pts_semantic_mask='semantic_mask',
            sp_pts_mask='super_points'),
        data_root='/home/nebula/xxy/ESAM/data/scannet200-sv',
        ignore_index=20,
        metainfo=dict(classes=[
            'wall',
            'floor',
            'cabinet',
            'bed',
            'chair',
            'sofa',
            'table',
            'door',
            'window',
            'bookshelf',
            'picture',
            'counter',
            'desk',
            'curtain',
            'refrigerator',
            'showercurtrain',
            'toilet',
            'sink',
            'bathtub',
            'otherfurniture',
        ]),
        modality=dict(use_camera=False, use_lidar=True),
        pipeline=[
            dict(
                coord_type='DEPTH',
                load_dim=6,
                shift_height=False,
                type='LoadPointsFromFile',
                use_color=True,
                use_dim=[
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                ]),
            dict(
                type='LoadAnnotations3D_',
                with_bbox_3d=False,
                with_label_3d=False,
                with_mask_3d=True,
                with_seg_3d=True,
                with_sp_mask_3d=True),
            dict(type='PointSegClassMapping'),
            dict(
                flip_ratio_bev_horizontal=0.5,
                flip_ratio_bev_vertical=0.5,
                sync_2d=False,
                type='RandomFlip3D'),
            dict(
                rot_range=[
                    -3.14,
                    3.14,
                ],
                scale_ratio_range=[
                    0.8,
                    1.2,
                ],
                shift_height=False,
                translation_std=[
                    0.1,
                    0.1,
                    0.1,
                ],
                type='GlobalRotScaleTrans'),
            dict(
                color_mean=(
                    121.87247106275309,
                    109.73306679373762,
                    95.614771986258,
                ),
                color_std=(
                    72.27912483750035,
                    70.2937017925937,
                    68.89837699573124,
                ),
                type='NormalizePointsColor_'),
            dict(
                merge_non_stuff_cls=False,
                num_classes=20,
                stuff_classes=[
                    0,
                    1,
                ],
                type='AddSuperPointAnnotations'),
            dict(
                gran=[
                    6,
                    20,
                ],
                mag=[
                    40,
                    160,
                ],
                p=0.5,
                type='ElasticTransfrom',
                voxel_size=0.02,
                with_rec=False),
            dict(
                keys=[
                    'points',
                    'gt_labels_3d',
                    'pts_semantic_mask',
                    'pts_instance_mask',
                    'sp_pts_mask',
                    'gt_sp_masks',
                    'elastic_coords',
                ],
                type='Pack3DDetInputs_'),
        ],
        scene_idxs=None,
        test_mode=False,
        type='ScanNetSegDataset_'),
    num_workers=6,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet3d', shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(
        coord_type='DEPTH',
        load_dim=6,
        shift_height=False,
        type='LoadPointsFromFile',
        use_color=True,
        use_dim=[
            0,
            1,
            2,
            3,
            4,
            5,
        ]),
    dict(
        type='LoadAnnotations3D_',
        with_bbox_3d=False,
        with_label_3d=False,
        with_mask_3d=True,
        with_seg_3d=True,
        with_sp_mask_3d=True),
    dict(type='PointSegClassMapping'),
    dict(
        flip_ratio_bev_horizontal=0.5,
        flip_ratio_bev_vertical=0.5,
        sync_2d=False,
        type='RandomFlip3D'),
    dict(
        rot_range=[
            -3.14,
            3.14,
        ],
        scale_ratio_range=[
            0.8,
            1.2,
        ],
        shift_height=False,
        translation_std=[
            0.1,
            0.1,
            0.1,
        ],
        type='GlobalRotScaleTrans'),
    dict(
        color_mean=(
            121.87247106275309,
            109.73306679373762,
            95.614771986258,
        ),
        color_std=(
            72.27912483750035,
            70.2937017925937,
            68.89837699573124,
        ),
        type='NormalizePointsColor_'),
    dict(
        merge_non_stuff_cls=False,
        num_classes=20,
        stuff_classes=[
            0,
            1,
        ],
        type='AddSuperPointAnnotations'),
    dict(
        gran=[
            6,
            20,
        ],
        mag=[
            40,
            160,
        ],
        p=0.5,
        type='ElasticTransfrom',
        voxel_size=0.02,
        with_rec=False),
    dict(
        keys=[
            'points',
            'gt_labels_3d',
            'pts_semantic_mask',
            'pts_instance_mask',
            'sp_pts_mask',
            'gt_sp_masks',
            'elastic_coords',
        ],
        type='Pack3DDetInputs_'),
]
tta_model = dict(_scope_='mmdet3d', type='Seg3DTTAModel')
tta_pipeline = [
    dict(
        _scope_='mmdet3d',
        backend_args=None,
        coord_type='DEPTH',
        load_dim=6,
        shift_height=False,
        type='LoadPointsFromFile',
        use_color=True,
        use_dim=[
            0,
            1,
            2,
            3,
            4,
            5,
        ]),
    dict(
        _scope_='mmdet3d',
        backend_args=None,
        type='LoadAnnotations3D',
        with_bbox_3d=False,
        with_label_3d=False,
        with_mask_3d=False,
        with_seg_3d=True),
    dict(_scope_='mmdet3d', color_mean=None, type='NormalizePointsColor'),
    dict(
        _scope_='mmdet3d',
        transforms=[
            [
                dict(
                    flip_ratio_bev_horizontal=0.0,
                    flip_ratio_bev_vertical=0.0,
                    sync_2d=False,
                    type='RandomFlip3D'),
            ],
            [
                dict(keys=[
                    'points',
                ], type='Pack3DDetInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        _scope_='mmdet3d',
        ann_file='scannet200_sv_oneformer3d_infos_val.pkl',
        backend_args=None,
        data_prefix=dict(
            pts='points',
            pts_instance_mask='instance_mask',
            pts_semantic_mask='semantic_mask',
            sp_pts_mask='super_points'),
        data_root='/home/nebula/xxy/ESAM/data/scannet200-sv',
        ignore_index=20,
        metainfo=dict(classes=[
            'wall',
            'floor',
            'cabinet',
            'bed',
            'chair',
            'sofa',
            'table',
            'door',
            'window',
            'bookshelf',
            'picture',
            'counter',
            'desk',
            'curtain',
            'refrigerator',
            'showercurtrain',
            'toilet',
            'sink',
            'bathtub',
            'otherfurniture',
        ]),
        modality=dict(use_camera=False, use_lidar=True),
        pipeline=[
            dict(
                coord_type='DEPTH',
                load_dim=6,
                shift_height=False,
                type='LoadPointsFromFile',
                use_color=True,
                use_dim=[
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                ]),
            dict(
                type='LoadAnnotations3D_',
                with_bbox_3d=False,
                with_label_3d=False,
                with_mask_3d=True,
                with_seg_3d=True,
                with_sp_mask_3d=True),
            dict(type='PointSegClassMapping'),
            dict(
                flip=False,
                img_scale=(
                    1333,
                    800,
                ),
                pts_scale_ratio=1,
                transforms=[
                    dict(
                        color_mean=(
                            121.87247106275309,
                            109.73306679373762,
                            95.614771986258,
                        ),
                        color_std=(
                            72.27912483750035,
                            70.2937017925937,
                            68.89837699573124,
                        ),
                        type='NormalizePointsColor_'),
                    dict(
                        merge_non_stuff_cls=False,
                        num_classes=20,
                        stuff_classes=[
                            0,
                            1,
                        ],
                        type='AddSuperPointAnnotations'),
                ],
                type='MultiScaleFlipAug3D'),
            dict(keys=[
                'points',
                'sp_pts_mask',
            ], type='Pack3DDetInputs_'),
        ],
        test_mode=True,
        type='ScanNetSegDataset_'),
    drop_last=False,
    num_workers=1,
    persistent_workers=True,
    sampler=dict(_scope_='mmdet3d', shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    _scope_='mmdet3d',
    id_offset=65536,
    inst_mapping=[
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        14,
        16,
        24,
        28,
        33,
        34,
        36,
        39,
    ],
    metric_meta=dict(
        classes=[
            'wall',
            'floor',
            'cabinet',
            'bed',
            'chair',
            'sofa',
            'table',
            'door',
            'window',
            'bookshelf',
            'picture',
            'counter',
            'desk',
            'curtain',
            'refrigerator',
            'showercurtrain',
            'toilet',
            'sink',
            'bathtub',
            'otherfurniture',
            'unlabeled',
        ],
        ignore_index=[
            20,
        ],
        label2cat=dict({
            0: 'wall',
            1: 'floor',
            10: 'picture',
            11: 'counter',
            12: 'desk',
            13: 'curtain',
            14: 'refrigerator',
            15: 'showercurtrain',
            16: 'toilet',
            17: 'sink',
            18: 'bathtub',
            19: 'otherfurniture',
            2: 'cabinet',
            20: 'unlabeled',
            3: 'bed',
            4: 'chair',
            5: 'sofa',
            6: 'table',
            7: 'door',
            8: 'window',
            9: 'bookshelf'
        })),
    min_num_points=1,
    sem_mapping=[
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        14,
        16,
        24,
        28,
        33,
        34,
        36,
        39,
    ],
    stuff_class_inds=[
        0,
        1,
    ],
    thing_class_inds=[
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
    ],
    type='UnifiedSegMetric')
vis_backends = [
    dict(_scope_='mmdet3d', type='LocalVisBackend'),
]
visualizer = dict(
    _scope_='mmdet3d',
    name='visualizer',
    type='Det3DLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'ESAM/work_dirs/tmp_bifusion_sv'
